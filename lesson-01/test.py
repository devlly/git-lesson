
# однострочный комментарий
"""
многострочный
комментарий
"""
is_sudent = True
name = input('введите имя')
print('hello', name, '!')
# что такое тип данных
# количество занимаемой памяти, какие операции допустимы, формат представления данных (как человек их видит), диапазон допустимых значений
#1.скалярные/простые типы (в один момент времени хранит одно значение)
# bool - boolean - логический (True/False)
"""
int - -целочисленные
float - с плавающей точкой
str - строковые
bytes - байтовая строка
"""
i1 = 666
i2 = 0x59F #шестнадцатеричная система исчисления (сс)
i3 = 0b101010 # двоичная сс
i4 = 0o255 #восьмеричная сс

f1 = 1.23
f2 = 12e-3 #12 в минус третьей степени
f3 = 12e3

s1 = "some \" string" # спецсимволы можно экранировань обратным слешем
s2 = 'string' #рекомендованный формат
s3 = r'row string' #как напишите, так и получите (питон меняет что то) нужно для написания регулярных выражений
s4 = u'hello' #юникодная строка. в питоне3 - все юникодные, во втором - не все (кириллицу не будет выводить, например)
s5 = b'byte string' #байтовая строка
s6 = '''1.
2.

''' #для того, чтобы были переносы по строкам, можно тройными двойными, иначе спецсимвол для переноса строки \n (в сырой строке будет выводиться как есть). + все форматирование будет сохранено - пробелы и тп
# комплексные числа - complex
c1 = 3.14j
#pyitmo
# 2. структурированные (сложные) может содержать много значений любого типа
# картеж tuple (кортеж) list(списки) set(множества) dict(словарь) object

t1 = (True, 1, 1.2, 'String', (1, 2, 3)) #1, для кортежа из одного элемента
lst1 = [[1], 2, False] #из одного элемента - норм
s1 = {1, 2, 3} # для пустого множества s2 = set{},  просто множество через сэт тоже можно, элементы разного типа
s3 = s1 - {1, 2}

"""
различия
элементы в множестве не повторяются, можно делать с арифметические операции
общее - то, как обращаемся. нумерация с нуля
нельзя к множеству по индексу
множества - отсортировать уникальные значения
"""
print(t2[1], lst1[2], lst1[0])
d = {
    'id': 1,
    'name': 'Vasya',
    'is_student': True,
    'skills': ('python', 'linux'
} # это словарь, ключи словаря - строки, порядок элементов  - не фиксированный, если нужно, есть спец модуль

#3.спецтипы
# None - пустота, тк питон хочет какое то значение для переменных

a = None
